1.
#include<stdio.h>
#include<string.h>

const int N = 10010;
char s[N];

int check(char c) {
	if (c >= 'a' && c <= 'z') return 1;
	if (c >= 'A' && c <= 'Z') return 2;
	if (c >= '0' && c <= '9') return 3;
	return 0;
}

int main() {
	scanf("%s", s);
	int n = strlen(s);
	for (int i = 0; i < n; i++) {
		if (s[i] == '-') {
			if (!i) printf("%c", s[i]);
			else if (s[i + 1] <= s[i - 1]) printf("%c", s[i]);
			else if (check(s[i - 1]) == check(s[i + 1]) && check(s[i - 1])) {
				for (int j = s[i - 1] + 1; j < s[i + 1]; j++) {
					printf("%c", j);
				}
			}
			else printf("%c", s[i]);
		}
		else {
			printf("%c", s[i]);
		}
	}
}
2.
#define N 100010
#include<stdio.h>
#include<string.h>
int num[N], t1 = -1, t2 = -1, ls;
char op[N], s[N];

int hash(char ch) {
    if (ch == '+' || ch == '-') return 1;
    else return 2;
}

void cal(int num[N], char op[N]) {
    int b = num[t1--];
    int a = num[t1--];
    char theta = op[t2--];
    if (theta == '+') num[++t1] = a + b;
    else if (theta == '-') num[++t1] = a - b;
    else if (theta == '*') num[++t1] = a * b;
    else num[++t1] = a / b;
}
int main() {
    scanf("%s", s);
    int ls = strlen(s);

    for (int i = 0; i < ls; i++) {
        char c = s[i];
        if ((c - '0' >= 0) && (c - '0' <= 9)) {
            int j = i, t = 0;
            while (j < ls && (s[j] - '0' >= 0) && (s[j] - '0' <= 9)) t = 10 * t + s[j++] - '0';
            num[++t1] = t;
            i = j - 1;
        }
        else {
            while (t2 >= 0 && hash(c) <= hash(op[t2])) cal(num, op);
            op[++t2] = c;
        }
    }
    while (t2 >= 0) cal(num, op);
    printf("%d", num[0]);

    return 0;
}
3.
#include<stdio.h>
#include<string.h>

double n;

int main() {
	scanf("%lf", &n);
	if (n < 1) {
		int cnt = 0;
		while (n < 1) {
			n *= 10;
			cnt++;
		}
		printf("%lge%d", n, cnt);
	}
	else if (n > 10) {
		int cnt = 0;
		while (n > 10) {
			n /= 10;
			cnt++;
		}
		printf("%lge%d", n, cnt);
	}
	else printf("%lge0", n);
}
4.
#include<stdio.h>
#include<string.h>

#define N 100010
char A[N], B[N];
int a[N], b[N], m, n;

int cmp(char a[], char b[]) {
    if (strlen(a) != strlen(b)) {
        if (strlen(a) > strlen(b))
            return 1;
        else return 0;
    }

    for (int i = 0; i < strlen(a); i++) {
        if (a[i] != b[i]) {
            if (a[i] > b[i])
                return 1;
            else return 0;
        }
    }

    return 1;
}

void sub(int a[], int b[], int m, int n) {
    int c[N], t = 0;
    for (int i = 0; i < m; i++) {
        t = a[i] - t;
        if (i < n)
            t = t - b[i];
        c[i] = (t + 10) % 10;
        if (t < 0) t = 1;
        else t = 0;
    }

    while (c[m - 1] == 0 && m - 1 > 0) m--;
    for (int i = m - 1; i >= 0; i--)
        printf("%d", c[i]);
}

int main()
{
    scanf("%s%s", &A, &B);
    m = strlen(A); n = strlen(B);
    for (int i = strlen(A) - 1; i >= 0; i--) a[m - i - 1] = A[i] - '0';
    for (int i = strlen(B) - 1; i >= 0; i--) b[n - i - 1] = B[i] - '0';
    if (cmp(A, B) == 1)
        sub(a, b, m, n);
    else {
        printf("-");
        sub(b, a, n, m);
    }
    return 0;

}
5.
#include<stdio.h>
#define N 100

int st[N], res[N];
int n, idx;

void bfs(int k) {
	if (k == n ) {
		for (int i = 0; i < idx; i++) {
			printf("%d ", res[i]);
		}
		puts("");
		return;
	}

	for (int i = 1; i <= n; i++) {
		if (!st[i]) {
			st[i] = 1;
			res[idx++] = i;
			bfs(k + 1);
			idx--;
			st[i] = 0;
		}
	}
}

int main() {
	scanf("%d", &n);
	bfs(0);
}
